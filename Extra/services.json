[
  {
    "domain": "system_log",
    "services": {
      "clear": {
        "description": "Clear all log entries.",
        "fields": {}
      }
    }
  },
  {
    "domain": "persistent_notification",
    "services": {
      "create": {
        "description": "Show a notification in the frontend.",
        "fields": {
          "message": {
            "description": "Message body of the notification. [Templates accepted]",
            "example": "Please check your configuration.yaml."
          },
          "notification_id": {
            "description": "Target ID of the notification, will replace a notification with the same Id. [Optional]",
            "example": 1234
          },
          "title": {
            "description": "Optional title for your notification. [Optional, Templates accepted]",
            "example": "Test notification"
          }
        }
      },
      "dismiss": {
        "description": "Remove a notification from the frontend.",
        "fields": {
          "notification_id": {
            "description": "Target ID of the notification, which should be removed. [Required]",
            "example": 1234
          }
        }
      }
    }
  },
  {
    "domain": "homeassistant",
    "services": {
      "check_config": {
        "description": "Check the Home Assistant configuration files for errors. Errors will be displayed in the Home Assistant log.",
        "fields": {}
      },
      "reload_core_config": {
        "description": "Reload the core configuration.",
        "fields": {}
      },
      "restart": {
        "description": "Restart the Home Assistant service. It is normal to get a \"Failed to call service homeassistant/restart\" message.",
        "fields": {}
      },
      "stop": {
        "description": "Stop the Home Assistant service. It is normal to get a \"Failed to call service homeassistant/stop\" message.",
        "fields": {}
      },
      "toggle": {
        "description": "Generic service to toggle devices on/off under any domain. Same usage as the light.turn_on, switch.turn_on, etc. services.",
        "fields": {
          "entity_id": {
            "description": "The entity_id of the device to toggle on/off.",
            "example": "light.living_room"
          }
        }
      },
      "turn_off": {
        "description": "Generic service to turn devices off under any domain. Same usage as the light.turn_on, switch.turn_on, etc. services.",
        "fields": {
          "entity_id": {
            "description": "The entity_id of the device to turn off.",
            "example": "light.living_room"
          }
        }
      },
      "turn_on": {
        "description": "Generic service to turn devices on under any domain. Same usage as the light.turn_on, switch.turn_on, etc. services.",
        "fields": {
          "entity_id": {
            "description": "The entity_id of the device to turn on.",
            "example": "light.living_room"
          }
        }
      }
    }
  },
  {
    "domain": "light",
    "services": {
      "toggle": {
        "description": "Toggles a light.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to toggle.",
            "example": "light.kitchen"
          },
          "transition": {
            "description": "Duration in seconds it takes to get to next state.",
            "example": 60
          }
        }
      },
      "turn_off": {
        "description": "Turn a light off.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to turn off.",
            "example": "light.kitchen"
          },
          "flash": {
            "description": "If the light should flash.",
            "values": [
              "short",
              "long"
            ]
          },
          "transition": {
            "description": "Duration in seconds it takes to get to next state.",
            "example": 60
          }
        }
      },
      "turn_on": {
        "description": "Turn a light on.",
        "fields": {
          "brightness": {
            "description": "Number between 0..255 indicating brightness.",
            "example": 120
          },
          "brightness_pct": {
            "description": "Number between 0..100 indicating percentage of full brightness.",
            "example": 47
          },
          "color_name": {
            "description": "A human readable color name.",
            "example": "red"
          },
          "color_temp": {
            "description": "Color temperature for the light in mireds.",
            "example": 250
          },
          "effect": {
            "description": "Light effect.",
            "values": [
              "colorloop",
              "random"
            ]
          },
          "entity_id": {
            "description": "Name(s) of entities to turn on",
            "example": "light.kitchen"
          },
          "flash": {
            "description": "If the light should flash.",
            "values": [
              "short",
              "long"
            ]
          },
          "kelvin": {
            "description": "Color temperature for the light in Kelvin.",
            "example": 4000
          },
          "profile": {
            "description": "Name of a light profile to use.",
            "example": "relax"
          },
          "rgb_color": {
            "description": "Color for the light in RGB-format.",
            "example": "[255, 100, 100]"
          },
          "transition": {
            "description": "Duration in seconds it takes to get to next state",
            "example": 60
          },
          "white_value": {
            "description": "Number between 0..255 indicating level of white.",
            "example": "250"
          },
          "xy_color": {
            "description": "Color for the light in XY-format.",
            "example": "[0.52, 0.43]"
          }
        }
      }
    }
  },
  {
    "domain": "group",
    "services": {
      "reload": {
        "description": "Reload group configuration.",
        "fields": {}
      },
      "remove": {
        "description": "Remove a user group.",
        "fields": {
          "object_id": {
            "description": "Group id and part of entity id.",
            "example": "test_group"
          }
        }
      },
      "set": {
        "description": "Create/Update a user group.",
        "fields": {
          "add_entities": {
            "description": "List of members they will change on group listening.",
            "example": "domain.entity_id1, domain.entity_id2"
          },
          "control": {
            "description": "Value for control the group control.",
            "example": "hidden"
          },
          "entities": {
            "description": "List of all members in the group. Not compatible with 'delta'.",
            "example": "domain.entity_id1, domain.entity_id2"
          },
          "icon": {
            "description": "Name of icon for the group.",
            "example": "mdi:camera"
          },
          "name": {
            "description": "Name of group",
            "example": "My test group"
          },
          "object_id": {
            "description": "Group id and part of entity id.",
            "example": "test_group"
          },
          "view": {
            "description": "Boolean for if the group is a view.",
            "example": true
          },
          "visible": {
            "description": "If the group is visible on UI.",
            "example": true
          }
        }
      },
      "set_visibility": {
        "description": "Hide or show a group.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to set value.",
            "example": "group.travel"
          },
          "visible": {
            "description": "True if group should be shown or False if it should be hidden.",
            "example": true
          }
        }
      }
    }
  },
  {
    "domain": "recorder",
    "services": {
      "purge": {
        "description": "Start purge task - delete events and states older than x days, according to keep_days service data.",
        "fields": {
          "keep_days": {
            "description": "Number of history days to keep in database after purge. Value >= 0.",
            "example": 2
          }
        }
      }
    }
  },
  {
    "domain": "tts",
    "services": {
      "clear_cache": {
        "description": "Remove cache files and RAM cache.",
        "fields": {}
      },
      "google_say": {
        "description": "Say some things on a media player.",
        "fields": {
          "cache": {
            "description": "Control file cache of this message.",
            "example": "true"
          },
          "entity_id": {
            "description": "Name(s) of media player entities.",
            "example": "media_player.floor"
          },
          "language": {
            "description": "Language to use for speech generation.",
            "example": "ru"
          },
          "message": {
            "description": "Text to speak on devices.",
            "example": "My name is hanna"
          },
          "options": {
            "description": "A dictionary containing platform-specific options. Optional depending on the platform.",
            "example": "platform specific"
          }
        }
      }
    }
  },
  {
    "domain": "script",
    "services": {
      "reload": {
        "description": "",
        "fields": {}
      },
      "toggle": {
        "description": "",
        "fields": {}
      },
      "turn_off": {
        "description": "",
        "fields": {}
      },
      "turn_on": {
        "description": "",
        "fields": {}
      }
    }
  },
  {
    "domain": "switch",
    "services": {
      "toggle": {
        "description": "Toggles a switch state.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to toggle.",
            "example": "switch.living_room"
          }
        }
      },
      "turn_off": {
        "description": "Turn a switch off.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to turn off.",
            "example": "switch.living_room"
          }
        }
      },
      "turn_on": {
        "description": "Turn a switch on.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to turn on",
            "example": "switch.living_room"
          }
        }
      }
    }
  },
  {
    "domain": "mqtt",
    "services": {
      "publish": {
        "description": "Publish a message to an MQTT topic.",
        "fields": {
          "payload": {
            "description": "Payload to publish.",
            "example": "This is great"
          },
          "payload_template": {
            "description": "Template to render as payload value. Ignored if payload given.",
            "example": "{{ states('sensor.temperature') }}"
          },
          "qos": {
            "default": 0,
            "description": "Quality of Service to use.",
            "example": 2,
            "values": [
              0,
              1,
              2
            ]
          },
          "retain": {
            "default": false,
            "description": "If message should have the retain flag set.",
            "example": true
          },
          "topic": {
            "description": "Topic to publish payload.",
            "example": "/homeassistant/hello"
          }
        }
      }
    }
  },
  {
    "domain": "xiaomi_aqara",
    "services": {
      "add_device": {
        "description": "",
        "fields": {}
      },
      "play_ringtone": {
        "description": "",
        "fields": {}
      },
      "remove_device": {
        "description": "",
        "fields": {}
      },
      "stop_ringtone": {
        "description": "",
        "fields": {}
      }
    }
  },
  {
    "domain": "cover",
    "services": {
      "close_cover": {
        "description": "Close all or specified cover.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of cover(s) to close.",
            "example": "cover.living_room"
          }
        }
      },
      "close_cover_tilt": {
        "description": "Close all or specified cover tilt.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of cover(s) to close tilt.",
            "example": "cover.living_room"
          }
        }
      },
      "open_cover": {
        "description": "Open all or specified cover.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of cover(s) to open.",
            "example": "cover.living_room"
          }
        }
      },
      "open_cover_tilt": {
        "description": "Open all or specified cover tilt.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of cover(s) tilt to open.",
            "example": "cover.living_room"
          }
        }
      },
      "set_cover_position": {
        "description": "Move to specific position all or specified cover.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of cover(s) to set cover position.",
            "example": "cover.living_room"
          },
          "position": {
            "description": "Position of the cover (0 to 100).",
            "example": 30
          }
        }
      },
      "set_cover_tilt_position": {
        "description": "Move to specific position all or specified cover tilt.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of cover(s) to set cover tilt position.",
            "example": "cover.living_room"
          },
          "position": {
            "description": "Position of the cover (0 to 100).",
            "example": 30
          }
        }
      },
      "stop_cover": {
        "description": "Stop all or specified cover.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of cover(s) to stop.",
            "example": "cover.living_room"
          }
        }
      },
      "stop_cover_tilt": {
        "description": "Stop all or specified cover.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of cover(s) to stop.",
            "example": "cover.living_room"
          }
        }
      }
    }
  },
  {
    "domain": "logbook",
    "services": {
      "log": {
        "description": "",
        "fields": {}
      }
    }
  },
  {
    "domain": "automation",
    "services": {
      "reload": {
        "description": "Reload the automation configuration.",
        "fields": {}
      },
      "toggle": {
        "description": "Toggle an automation.",
        "fields": {
          "entity_id": {
            "description": "Name of the automation to toggle on/off.",
            "example": "automation.notify_home"
          }
        }
      },
      "trigger": {
        "description": "Trigger the action of an automation.",
        "fields": {
          "entity_id": {
            "description": "Name of the automation to trigger.",
            "example": "automation.notify_home"
          }
        }
      },
      "turn_off": {
        "description": "Disable an automation.",
        "fields": {
          "entity_id": {
            "description": "Name of the automation to turn off.",
            "example": "automation.notify_home"
          }
        }
      },
      "turn_on": {
        "description": "Enable an automation.",
        "fields": {
          "entity_id": {
            "description": "Name of the automation to turn on.",
            "example": "automation.notify_home"
          }
        }
      }
    }
  },
  {
    "domain": "apple_tv",
    "services": {
      "apple_tv_authenticate": {
        "description": "",
        "fields": {}
      },
      "apple_tv_scan": {
        "description": "",
        "fields": {}
      }
    }
  },
  {
    "domain": "fan",
    "services": {
      "oscillate": {
        "description": "Oscillates the fan.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of the entities to oscillate",
            "example": "fan.desk_fan"
          },
          "oscillating": {
            "description": "Flag to turn on/off oscillation",
            "example": true
          }
        }
      },
      "set_direction": {
        "description": "Set the fan rotation.",
        "fields": {
          "direction": {
            "description": "The direction to rotate",
            "example": "left"
          },
          "entity_id": {
            "description": "Name(s) of the entities to toggle",
            "example": "fan.living_room"
          }
        }
      },
      "set_speed": {
        "description": "Sets fan speed.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of the entities to set",
            "example": "fan.living_room"
          },
          "speed": {
            "description": "Speed setting",
            "example": "low"
          }
        }
      },
      "toggle": {
        "description": "Toggle the fan on/off.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of the entities to toggle",
            "exampl": "fan.living_room"
          }
        }
      },
      "turn_off": {
        "description": "Turns fan off.",
        "fields": {
          "entity_id": {
            "description": "Names(s) of the entities to turn off",
            "example": "fan.living_room"
          }
        }
      },
      "turn_on": {
        "description": "Turns fan on.",
        "fields": {
          "entity_id": {
            "description": "Names(s) of the entities to turn on",
            "example": "fan.living_room"
          },
          "speed": {
            "description": "Speed setting",
            "example": "high"
          }
        }
      },
      "xiaomi_miio_set_buzzer_off": {
        "description": "Turn the buzzer off.",
        "fields": {
          "entity_id": {
            "description": "Name of the air purifier entity.",
            "example": "fan.xiaomi_air_purifier"
          }
        }
      },
      "xiaomi_miio_set_buzzer_on": {
        "description": "Turn the buzzer on.",
        "fields": {
          "entity_id": {
            "description": "Name of the air purifier entity.",
            "example": "fan.xiaomi_air_purifier"
          }
        }
      },
      "xiaomi_miio_set_favorite_level": {
        "description": "Set the favorite level.",
        "fields": {
          "entity_id": {
            "description": "Name of the air purifier entity.",
            "example": "fan.xiaomi_air_purifier"
          },
          "level": {
            "description": "Level, between 0 and 16.",
            "example": "1"
          }
        }
      },
      "xiaomi_miio_set_led_brightness": {
        "description": "Set the led brightness.",
        "fields": {
          "brightness": {
            "description": "Brightness (0 = Bright, 1 = Dim, 2 = Off)",
            "example": "1"
          },
          "entity_id": {
            "description": "Name of the air purifier entity.",
            "example": "fan.xiaomi_air_purifier"
          }
        }
      },
      "xiaomi_miio_set_led_off": {
        "description": "Turn the led off.",
        "fields": {
          "entity_id": {
            "description": "Name of the air purifier entity.",
            "example": "fan.xiaomi_air_purifier"
          }
        }
      },
      "xiaomi_miio_set_led_on": {
        "description": "Turn the led on.",
        "fields": {
          "entity_id": {
            "description": "Name of the air purifier entity.",
            "example": "fan.xiaomi_air_purifier"
          }
        }
      }
    }
  },
  {
    "domain": "media_player",
    "services": {
      "clear_playlist": {
        "description": "Send the media player the command to clear players playlist.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to change source on.",
            "example": "media_player.living_room_chromecast"
          }
        }
      },
      "media_next_track": {
        "description": "Send the media player the command for next track.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to send next track command to.",
            "example": "media_player.living_room_sonos"
          }
        }
      },
      "media_pause": {
        "description": "Send the media player the command for pause.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to pause on.",
            "example": "media_player.living_room_sonos"
          }
        }
      },
      "media_play": {
        "description": "Send the media player the command for play.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to play on.",
            "example": "media_player.living_room_sonos"
          }
        }
      },
      "media_play_pause": {
        "description": "Toggle media player play/pause state.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to toggle play/pause state on.",
            "example": "media_player.living_room_sonos"
          }
        }
      },
      "media_previous_track": {
        "description": "Send the media player the command for previous track.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to send previous track command to.",
            "example": "media_player.living_room_sonos"
          }
        }
      },
      "media_seek": {
        "description": "Send the media player the command to seek in current playing media.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to seek media on.",
            "example": "media_player.living_room_chromecast"
          },
          "seek_position": {
            "description": "Position to seek to. The format is platform dependent.",
            "example": 100
          }
        }
      },
      "media_stop": {
        "description": "Send the media player the stop command.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to stop on.",
            "example": "media_player.living_room_sonos"
          }
        }
      },
      "play_media": {
        "description": "Send the media player the command for playing media.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to seek media on",
            "example": "media_player.living_room_chromecast"
          },
          "media_content_id": {
            "description": "The ID of the content to play. Platform dependent.",
            "example": "https://home-assistant.io/images/cast/splash.png"
          },
          "media_content_type": {
            "description": "The type of the content to play. Must be one of MUSIC, TVSHOW, VIDEO, EPISODE, CHANNEL or PLAYLIST",
            "example": "MUSIC"
          }
        }
      },
      "select_source": {
        "description": "Send the media player the command to change input source.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to change source on.",
            "example": "media_player.media_player.txnr535_0009b0d81f82"
          },
          "source": {
            "description": "Name of the source to switch to. Platform dependent.",
            "example": "video1"
          }
        }
      },
      "shuffle_set": {
        "description": "Set shuffling state.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to set.",
            "example": "media_player.spotify"
          },
          "shuffle": {
            "description": "True/false for enabling/disabling shuffle.",
            "example": true
          }
        }
      },
      "toggle": {
        "description": "Toggles a media player power state.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to toggle.",
            "example": "media_player.living_room_chromecast"
          }
        }
      },
      "turn_off": {
        "description": "Turn a media player power off.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to turn off.",
            "example": "media_player.living_room_chromecast"
          }
        }
      },
      "turn_on": {
        "description": "Turn a media player power on.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to turn on.",
            "example": "media_player.living_room_chromecast"
          }
        }
      },
      "volume_down": {
        "description": "Turn a media player volume down.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to turn volume down on.",
            "example": "media_player.living_room_sonos"
          }
        }
      },
      "volume_mute": {
        "description": "Mute a media player's volume.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to mute.",
            "example": "media_player.living_room_sonos"
          },
          "is_volume_muted": {
            "description": "True/false for mute/unmute.",
            "example": true
          }
        }
      },
      "volume_set": {
        "description": "Set a media player's volume level.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to set volume level on.",
            "example": "media_player.living_room_sonos"
          },
          "volume_level": {
            "description": "Volume level to set as float.",
            "example": 0.6
          }
        }
      },
      "volume_up": {
        "description": "Turn a media player volume up.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to turn volume up on.",
            "example": "media_player.living_room_sonos"
          }
        }
      }
    }
  },
  {
    "domain": "remote",
    "services": {
      "send_command": {
        "description": "Sends a single command to a single device.",
        "fields": {
          "command": {
            "description": "A single command or a list of commands to send.",
            "example": "Play"
          },
          "delay_secs": {
            "description": "An optional value that specifies that number of seconds you want to wait in between repeated commands. If not specified, the default of 0.4 seconds will be used.",
            "example": "0.75"
          },
          "device": {
            "description": "Device ID to send command to.",
            "example": "32756745"
          },
          "entity_id": {
            "description": "Name(s) of entities to send command from.",
            "example": "remote.family_room"
          },
          "num_repeats": {
            "description": "An optional value that specifies the number of times you want to repeat the command(s). If not specified, the command(s) will not be repeated.",
            "example": "5"
          }
        }
      },
      "toggle": {
        "description": "Toggles a device.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to toggle.",
            "example": "remote.family_room"
          }
        }
      },
      "turn_off": {
        "description": "Sends the Power Off Command.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to turn off.",
            "example": "remote.family_room"
          }
        }
      },
      "turn_on": {
        "description": "Sends the Power On Command.",
        "fields": {
          "activity": {
            "description": "Activity ID or Activity Name to start.",
            "example": "BedroomTV"
          },
          "entity_id": {
            "description": "Name(s) of entities to turn on.",
            "example": "remote.family_room"
          }
        }
      }
    }
  }
]